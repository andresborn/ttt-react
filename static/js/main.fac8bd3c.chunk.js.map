{"version":3,"sources":["components/Square.js","components/Board.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","handleName1","bind","handleName2","restart","state","squares","xIsNext","name1","name2","i","this","checkWinner","slice","setState","e","target","status","winner","type","onChange","placeholder","handleClick","Component","winningConditions","length","a","b","c","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fac8bd3c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = props => {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nexport default Square\n\n","import React, { Component } from \"react\";\nimport Square from \"./Square.js\";\n\nexport class Board extends Component {\n  constructor(props) {\n    super(props);\n    this.handleName1 = this.handleName1.bind(this);  // Bind our methods to our scope\n    this.handleName2 = this.handleName2.bind(this);  // so, when calling `this`, we refer to\n    this.restart = this.restart.bind(this);          // this state\n    this.state = {\n      squares: [null, null, null, null, null, null, null, null, null],\n      xIsNext: true,\n      name1: \"\",\n      name2: \"\",\n    };\n  }\n\n  handleClick(i) {\n    if (this.state.squares[i] || checkWinner(this.state.squares)) {\n      return;  // if square is filled or there's a winner, don't do anything\n    } else {\n      const squares = this.state.squares.slice(); // create new squares to then assign to state good practice for \"time traveling\"\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\"; // Assign to square the X or O, depending on who's turn it is\n\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n  }\n\n  handleName1(e) {\n    this.setState({ name1: e.target.value });\n  }\n  handleName2(e) {\n    this.setState({ name2: e.target.value });\n  }\n\n  restart() {\n    this.setState({squares: [null, null, null, null, null, null, null, null, null],\n      xIsNext: true,})\n  }\n\n  render() {\n    let winner = checkWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status =\n        winner === \"X\"\n          ? `The winner is ${this.state.name1}` // render player names\n          : `The winner is ${this.state.name2}`;\n    } else {\n        if(this.state.name1 === \"\" || this.state.name2 === \"\") {\n            // if empty don't render names\n        } else {\n            status = this.state.xIsNext\n        ? `It is ${this.state.name1}'s turn` // conditionally render who's turn it is\n        : `It is ${this.state.name2}'s turn`;\n        }\n    }\n\n    return (\n      <div className=\"board\">\n        <div className=\"banner\">\n          <p className=\"display\">{status}</p>\n          <div className=\"names-row\">\n            <input\n            className=\"name\"\n              type=\"text\"\n              value={this.state.name1}\n              onChange={this.handleName1}\n              placeholder=\"Player 1\"\n            />\n            <input\n            className=\"name\"\n              type=\"text\"\n              value={this.state.name2}\n              onChange={this.handleName2}\n              placeholder=\"Player 2\"\n            />\n          </div>\n        </div>\n        <button className=\"reset\" onClick={this.restart}>Play again</button>\n        <div className=\"row\">\n          <Square\n            value={this.state.squares[0]}\n            onClick={() => this.handleClick(0)}\n          />\n          <Square\n            value={this.state.squares[1]}\n            onClick={() => this.handleClick(1)}\n          />\n          <Square\n            value={this.state.squares[2]}\n            onClick={() => this.handleClick(2)}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            value={this.state.squares[3]}\n            onClick={() => this.handleClick(3)}\n          />\n          <Square\n            value={this.state.squares[4]}\n            onClick={() => this.handleClick(4)}\n          />\n          <Square\n            value={this.state.squares[5]}\n            onClick={() => this.handleClick(5)}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            value={this.state.squares[6]}\n            onClick={() => this.handleClick(6)}\n          />\n          <Square\n            value={this.state.squares[7]}\n            onClick={() => this.handleClick(7)}\n          />\n          <Square\n            value={this.state.squares[8]}\n            onClick={() => this.handleClick(8)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n\n\nconst checkWinner = (squares) => {\n  const winningConditions = [\n    [0, 1, 2], // top horizontal\n    [3, 4, 5], // mid horizontal\n    [6, 7, 8], // bottom horizontal\n    [0, 3, 6], // left vertical\n    [1, 4, 7], // center vertical\n    [2, 5, 8], // right vertical\n    [0, 4, 8], // top left to bottom right diagonal\n    [2, 4, 6], // top right to bottom left diagonal\n  ];\n  for (let i = 0; i < winningConditions.length; i++) {\n    const [a, b, c] = winningConditions[i];\n    if (\n      squares[a] &&\n      squares[a] === squares[b] &&\n      squares[a] === squares[c]\n    ) {\n      return squares[a];\n    } \n  }\n  return null;\n}","import React from 'react'\n\nconst Header = props => {\n    return (\n        <h1 className=\"header\">\n            Tic Tac Toe\n        </h1>\n    )\n}\n\nexport default Header\n\n","import './App.css';\nimport Board from './components/Board.js';\nimport Header from './components/Header.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}